package SnailSort;

import java.util.Arrays;

public class SnailSortV3 {
    /* Given an n x n array, return the array elements arranged from outermost elements to the middle element,
           traveling clockwise.
           array = [[1,2,3],
                    [4,5,6],
                    [7,8,9]]
           snail(array) #=> [1,2,3,6,9,8,7,4,5]
         */
    public static void main(String[] args) {
        /*int[][] array = {{ 1,  2,  3,  4,  5,  6,  7},
                         {24, 25, 26, 27, 28, 29,  8},
                         {23, 40, 41, 42, 43, 30,  9},
                         {22, 39, 48, 49, 44, 31, 10},
                         {21, 38, 47, 46, 45, 32, 11},
                         {20, 37, 36, 35, 34, 33, 12},
                         {19, 18, 17, 16, 15, 14, 13}};*/
        int[][] array = {{733, 762, 663, 423,  88, 804, 990, 387, 598, 941, 940, 280, 783, 628,  35},
                {850,  21, 936, 922, 896, 344, 394, 959, 987, 384, 685, 944, 103, 431, 316},
                {598,   8, 331, 305, 839, 179,  20, 869, 751, 788, 123,  14, 620, 526,  65},
                {180, 765, 754,  82,  57, 447, 911, 436, 641,  63, 862, 873, 804, 414, 631},
                {522, 806, 185, 203, 683, 821, 974,  22, 459,   3, 796, 912, 220, 771, 780},
                {614, 722, 297, 456, 137, 347, 873, 556, 737, 797,  47, 973, 429,  72, 640},
                {551, 843, 439, 432, 313, 494, 570, 609, 366, 350, 507, 489, 969, 740, 263},
                {481,  73, 941,  53, 465, 594, 762, 972, 827, 733,  23, 552,  78, 437, 294},
                {872, 207, 769, 380, 278, 383,  73,  61, 844, 715, 461, 269, 735, 715, 936},
                {699, 714, 106, 764, 496, 603, 256, 678, 705, 722, 685, 918,  24, 666, 973},
                {280, 164, 707, 942, 530, 514, 897, 320, 854, 933, 323, 478, 982, 512, 283},
                {520,  87,  98, 318, 927,  64, 561, 304, 971, 969, 562, 633, 729,  60, 262},
                {475, 208, 391, 350, 685, 290, 934, 184, 989, 646, 980, 249, 453, 725, 405},
                { 55, 875, 556, 733, 201, 644, 460, 298, 158, 312,  38, 310, 802, 276, 405},
                {433, 791, 223, 542, 928, 506, 451, 904, 649, 219, 510, 438, 350, 733, 158}};
        System.out.println(Arrays.toString(snail(array)));
    }

    public static int[] snail(int[][] array) {
        if (array[0].length == 0) return new int[]{};
        int n = array.length;
        int[] res = new int[n*n];
        int k = 0;
        for (int l = 0; l < n/2; l++) {
            for (int i = l; i < n - l; i++) {
                res[k] = array[l][i];
                k++;
            }
            for (int i = l + 1; i < n-l-1; i++) {
                res[k] = array[i][n-l-1];
                k++;
            }
            for (int i = n-l-1; i > l-1; i--) {
                res[k] = array[n-l-1][i];
                k++;
            }
            for (int i = n-l-2; i > l; i--) {
                res[k] = array[i][l];
                k++;
            }
        }
        if (n%2==1) res[res.length-1] = array[n/2][n/2];
        return res;
    }
}
